// <auto-generated />
using System;
using DuckTaleTest.dbmodel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DuckTaleTest.dbmodel.Migrations
{
    [DbContext(typeof(dbcontext))]
    [Migration("20201214142529_add newtables")]
    partial class addnewtables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DuckTale.dbmodel.Model.StudentInfoLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Marks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ModifyOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudentInfoFk")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentMarksFk")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentInfoFk");

                    b.HasIndex("StudentMarksFk");

                    b.ToTable("StudentInfoLink");
                });

            modelBuilder.Entity("DuckTale.dbmodel.Model.StudentSubject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentSubject");
                });

            modelBuilder.Entity("DuckTale.dbmodel.Model.Studentinfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Studentinfos");
                });

            modelBuilder.Entity("DuckTale.dbmodel.Model.StudentInfoLink", b =>
                {
                    b.HasOne("DuckTale.dbmodel.Model.Studentinfo", "Studentinfo")
                        .WithMany()
                        .HasForeignKey("StudentInfoFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DuckTale.dbmodel.Model.StudentSubject", "StudentSubject")
                        .WithMany()
                        .HasForeignKey("StudentMarksFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Studentinfo");

                    b.Navigation("StudentSubject");
                });
#pragma warning restore 612, 618
        }
    }
}
